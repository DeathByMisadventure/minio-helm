name: Helm Chart CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-scan-and-template:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Helm
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.15.4 # Use a stable Helm version

      # Install kind for dry-run cluster
      - name: Set up kind
        uses: helm/kind-action@v1.10.0
        with:
          version: v0.24.0
          cluster_name: helm-test-cluster

      # Run helm lint to validate chart syntax
      - name: Run helm lint
        run: |
          helm lint ./
        working-directory: ${{ github.workspace }}

      # Run helm template to verify rendering
      - name: Run helm template
        run: |
          helm template test-release ./ \
            --set replicas=1 \
            --set persistence.enabled=true \
            --set ingress.enabled=false \
            > rendered-template.yaml
          cat rendered-template.yaml
        working-directory: ${{ github.workspace }}

      # Run Trivy config scan on rendered manifests
      - name: Run Trivy config scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: config
          format: table
          exit-code: '0' # Fail the job on any findings
          severity: CRITICAL,HIGH,MEDIUM # Adjust severity as needed
          scanners: misconfig
          scan-ref: rendered-template.yaml

      # Run helm install dry-run against kind cluster
      - name: Run helm install dry-run
        run: |
          helm install test-release ./ \
            --dry-run \
            --set replicas=1 \
            --set persistence.enabled=true \
            --set ingress.enabled=false \
            --namespace default
        working-directory: ${{ github.workspace }}

      # Optional: Validate rendered manifests with kubeval
      - name: Validate Kubernetes manifests
        run: |
          curl -LO https://github.com/instrumenta/kubeval/releases/download/v0.16.1/kubeval-linux-amd64.tar.gz
          tar -xzf kubeval-linux-amd64.tar.gz
          ./kubeval rendered-template.yaml --strict
        working-directory: ${{ github.workspace }}
